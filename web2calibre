#!/usr/bin/env perl
use strict;
use warnings;
use Getopt::Std;
use Encode qw(encode);
use File::Basename qw(basename);
use File::Temp qw(tempdir);
use File::Spec::Functions qw(catfile);
use Regexp::Common qw(URI);
use URI::Escape;
use LWP::Simple qw(get);
use File::Slurp qw(write_file);
use HTML::TreeBuilder;
use PDF::API2;

my @wkhtmltopdf_opts = qw(-B 0 -L 0 -R 0 -T 0 --disallow-local-file-access -q);
my $DEFAULT_SIZE = 'A5';

sub html2pdf {
    my ($url, $file) = @_;
    system('wkhtmltopdf', @wkhtmltopdf_opts, $url, $file) == 0 or die;
}

sub instapepered_url {
    'http://instapaper.com/text?u=' . uri_escape($_[0]);
}

sub html_title {
    my $tree = HTML::TreeBuilder->new;
    $tree->parse($_[0]);
    $tree->eof;
    $tree->find('title')->as_text;
}

sub merge_pdfs {
    my $infiles_ref = shift;
    my $newfile = shift;
    my %meta = @_;

    my %oldmeta;
    my $newpdf = PDF::API2->new;
    for my $file (@$infiles_ref) {
        my $inpdf = PDF::API2->open($file) or die;
        my $pages = scalar @{$inpdf->{pagestack}};
        for my $page (1..$pages) {
            $newpdf->importpage($inpdf, $page);
        }
        %oldmeta = $inpdf->info unless %oldmeta;
        $inpdf->end;
    }
    $newpdf->info(%oldmeta, %meta);
    $newpdf->saveas($newfile);
}

sub add_to_calibre {
    system('calibredb', 'add', '-d', $_[0]) == 0 or die;
}

sub parse_options {
    my %opts;
    getopts('ns:', \%opts);
    push(@wkhtmltopdf_opts, '-n') if $opts{n};
    push(@wkhtmltopdf_opts, '-s', ($opts{s} || $DEFAULT_SIZE));
}

sub usage {
    my $cmd = basename($0);
    print <<"__USAGE__";
Usage: ${cmd} [OPTION]... url [url2]...

  -n
        Do not allow web pages to run javascript
  -s SIZE
        Set paper size to: A4, Letter, etc. (default: A5)
__USAGE__

    exit 1;
}

sub check_urls {
    for my $u (@_) {
        return 0 unless $u =~ /\A$RE{URI}{HTTP}\z/o;
    }
    return 1;
}

if (__FILE__ eq $0) {
    parse_options;

    my @urls = @ARGV;
    scalar(@urls) > 0 or usage;
    check_urls(@urls) or usage;

    my $tmpdir = tempdir(CLEANUP => 1);
    my @pdfs = ();
    my $title;
    my $i = 0;

    for my $url (@urls) {
        my $htmlfile = catfile($tmpdir, "out_${i}.html");
        my $rawpdffile = catfile($tmpdir, "out_${i}.pdf");

        my $html = get(instapepered_url($url)) or die;
        write_file $htmlfile, encode('utf-8', $html) or die;
        $title ||= html_title($html);

        html2pdf $htmlfile, $rawpdffile;
        push(@pdfs, $rawpdffile);
        $i++;
    }

    my $pdffile = catfile($tmpdir, 'result.pdf');
    merge_pdfs \@pdfs, $pdffile, Title => $title, Author => 'web';

    add_to_calibre $pdffile;
}
